<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Partially Attended</title>
    <link>http://partiallyattended.com/categories/python/</link>
    <description>Recent content in Python on Partially Attended</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://partiallyattended.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Advanced computing with IPython</title>
      <link>http://partiallyattended.com/2018/06/07/advanced_computing_with_ipython/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2018/06/07/advanced_computing_with_ipython/</guid>
      <description>This post shows how to execute compiled commands in your IPython environments. That can allow you to, for example, pull in FORTRAN or C++ code to get speed on computationally heavy lines of code.
https://lwn.net/SubscriberLink/756192/ebada7ecad32f3ad/</description>
    </item>
    
    <item>
      <title>How to Visualize an XML Sitemap Using Python - Ayima</title>
      <link>http://partiallyattended.com/2018/06/06/how_to_visualize_an_xml_sitemap_using_python_-_ayima/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2018/06/06/how_to_visualize_an_xml_sitemap_using_python_-_ayima/</guid>
      <description>This looks like a great way to quickly get an overview of your site architecture, a vital step when thinking about wide spread changes.
https://www.ayima.com/blog/how-to-visualize-an-xml-sitemap-using-python.html</description>
    </item>
    
    <item>
      <title>Hunting for structure in nested JSON with python just got a whole lot easier</title>
      <link>http://partiallyattended.com/2018/05/11/hunting_for_structure_in_nested_json_with_python_just_got_a_whole_lot_easier_/</link>
      <pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2018/05/11/hunting_for_structure_in_nested_json_with_python_just_got_a_whole_lot_easier_/</guid>
      <description>A very common python task that I find myself stumbling over repeatedly is trying to get the syntax right to address or retrieve a specific value to a key in a dented JSON document, in particular if that key is some way down the tree.
I’ve just found the library https://github.com/mahmoud/glom which is written up really nicely here: https://sedimental.org/glom_restructured_data.html
Before looking at this modele in detail I had thought that I could pass a reference to a key to glom without specifying its location fully in the structure of the input file, but after looking at this for a moment it became clear that this is not what it does, but rather is good at helping to remap nested data structures into new structures, and accessing the data you want via path like queries.</description>
    </item>
    
    <item>
      <title>Hunting for structure in nested JSON with python just got a whole lot easier</title>
      <link>http://partiallyattended.com/2018/05/11/hunting_for_structure_in_nested_json_with_python_just_got_a_whole_lot_easier_/</link>
      <pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2018/05/11/hunting_for_structure_in_nested_json_with_python_just_got_a_whole_lot_easier_/</guid>
      <description>A very common python task that I find myself stumbling over repeatedly is trying to get the syntax right to address or retrieve a specific value to a key in a dented JSON document, in particular if that key is some way down the tree.
I’ve just found the library https://github.com/mahmoud/glom which is written up really nicely here: https://sedimental.org/glom_restructured_data.html
Before looking at this modele in detail I had thought that I could pass a reference to a key to glom without specifying its location fully in the structure of the input file, but after looking at this for a moment it became clear that this is not what it does, but rather is good at helping to remap nested data structures into new structures, and accessing the data you want via path like queries.</description>
    </item>
    
    <item>
      <title>python - running commands from within a directory</title>
      <link>http://partiallyattended.com/2018/04/19/python_-_running_commands_from_within_a_directory_/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2018/04/19/python_-_running_commands_from_within_a_directory_/</guid>
      <description>A neat python snippet for jumping into a directory, running a script, and jumping out again, found on Stackoverflow, provided by Brian Hunt.
from subprocess import Popen, PIPE import os import sys class cd: &amp;#34;&amp;#34;&amp;#34;Context manager for changing the current working directory see https://stackoverflow.com/questions/431684/how-do-i-cd-in-python &amp;#34;&amp;#34;&amp;#34; def __init__(self, newPath): self.newPath = os.path.expanduser(newPath) def __enter__(self): self.savedPath = os.getcwd() os.chdir(self.newPath) def __exit__(self, etype, value, traceback): os.chdir(self.savedPath) with cd(&amp;#34;~/blog/partiallyattended&amp;#34;): title = new_post.title process = subprocess.</description>
    </item>
    
    <item>
      <title>Moving from Jekyll to Hugo - urls</title>
      <link>http://partiallyattended.com/2017/09/13/moving_from_jekyll_to_hugo_-_urls/</link>
      <pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2017/09/13/moving_from_jekyll_to_hugo_-_urls/</guid>
      <description>I&amp;rsquo;ve been changing the static blog generator that I use and am slowly moving from Jekyll to Hugo. My main reason is the better support for tags and categories that Hugo supports, but I&amp;rsquo;m not finding the templating as intuitive in Hugo as in Jekyll, so it&amp;rsquo;s not a slam-dunk.
There are a couple of small differences between the two systems that are making me reconfigure my blogging workflow a bit.</description>
    </item>
    
    <item>
      <title>Some pittfalls in using iPython to generate talk slides</title>
      <link>http://partiallyattended.com/2014/08/11/pitfalls-of-ipython-for-talk-slides/</link>
      <pubDate>Mon, 11 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2014/08/11/pitfalls-of-ipython-for-talk-slides/</guid>
      <description>Yesterday I gave a talk using iPython notebook to generate the talk slides. You can get the notebook on github, and you can see a live version of the slides.
It succeeded in generating an artefact that was somewhat literate, in that the code and documentation are nicely woven together, so anyone who has the time can get to exactly the same point that I got to, with this repo, however there were also a couple of problems that I ran into that make me feel that this is not yet ready for mainstream use, specifically:</description>
    </item>
    
    <item>
      <title>Communicating better, moving from virtualenv to vagrant/Chef</title>
      <link>http://partiallyattended.com/2013/04/23/chef-vagrant-over-virutalenv/</link>
      <pubDate>Tue, 23 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2013/04/23/chef-vagrant-over-virutalenv/</guid>
      <description>I&amp;rsquo;ve been using virtualenv for a while, but in the past few months, since taking up the role of head of technology for eLife, I&amp;rsquo;ve been giving much more thought about how to build scalable development environments.
Ever since I was managing connotea, one of the biggest pains has been configuration management. I seem to have spent almost more time on configuring environments than on actually doing any development work (disclaimer, I don&amp;rsquo;t actually do much coding, I usually do more product management, but it&amp;rsquo;s really useful to know the development pain points).</description>
    </item>
    
    <item>
      <title>Super quick start guide to fluidinfo</title>
      <link>http://partiallyattended.com/2012/06/17/getting-started-with-fish/</link>
      <pubDate>Sun, 17 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2012/06/17/getting-started-with-fish/</guid>
      <description>This is a quick and dirty guide to getting started with fish, the command line tool for fulidinfo. I did it by setting up a virtualenv, as I find it a lot easier to manage python dependancies that way.
Setup a virtualenv:
% mkvirtual env fi Open the virtual env session:
% workon fi Install httplib2:
% pip install httplib2 Install readline:
% pip install readline Get fish, you can either get it from github and install from source, last time I checked that was:</description>
    </item>
    
    <item>
      <title>Converting between dates and unix time in Python</title>
      <link>http://partiallyattended.com/2011/10/13/managing-unix-time-in-python/</link>
      <pubDate>Thu, 13 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2011/10/13/managing-unix-time-in-python/</guid>
      <description> Going from a date to a unix time: &amp;gt;&amp;gt;&amp;gt; from datetime import date &amp;gt;&amp;gt;&amp;gt; from time import mktime &amp;gt;&amp;gt;&amp;gt; start = date(2011, 9, 26) &amp;gt;&amp;gt;&amp;gt; mktime(start.timetuple()) 1316991600.0 Going from a unix time to a date: &amp;gt;&amp;gt;&amp;gt; from time import strftime &amp;gt;&amp;gt;&amp;gt; from datetime import datetime &amp;gt;&amp;gt;&amp;gt; datetime.fromtimestamp(int(&amp;#34;1284101485&amp;#34;)).strftime(&amp;#39;%Y-%m-%d%H:%M:%S&amp;#39;) &amp;#39;2010-09-10 07:51:25&amp;#39; </description>
    </item>
    
    <item>
      <title>Django models vs. Pickling objects for object persistence.</title>
      <link>http://partiallyattended.com/2009/10/19/django-models-vs.-pickling-objects-for-object-persistence./</link>
      <pubDate>Mon, 19 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2009/10/19/django-models-vs.-pickling-objects-for-object-persistence./</guid>
      <description>I do a bit of code hacking and I often find myself putting objects into pickle files, and reading and writing them in order to fake object persistence. It&#39;s easy, but messy and it begins to leave lot&#39;s of pickle files sitting around in your path. I&#39;ve decided to finally make the switch towards using a more grown up persistent object solution. I&#39;ve decided to try out Django + SQLite.</description>
    </item>
    
    <item>
      <title>BarCamp Cambridge - James talking about HTML5</title>
      <link>http://partiallyattended.com/2008/07/14/barcamp-cambridge-james-talking-about-html5/</link>
      <pubDate>Mon, 14 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2008/07/14/barcamp-cambridge-james-talking-about-html5/</guid>
      <description>James is just an interested bysander on the HTML 5 mailing list, hey, it&#39;s abarcamp
html5 is th enew verison of html
applemozillaoperaanyone who joins the mailing list
and
w3c (which means MS, which means this is going to work in IE)
if you have ideas, then you can joing hte mailing list and put ideasforwards for the specification
why should we?
lots of information is locked up in HTML, not XML, not SVGL</description>
    </item>
    
    <item>
      <title>BarCamp Cambridge, Tom Morris, Semantic Web for hackers</title>
      <link>http://partiallyattended.com/2008/07/14/barcamp-cambridge-tom-morris-semantic-web-for-hackers/</link>
      <pubDate>Mon, 14 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2008/07/14/barcamp-cambridge-tom-morris-semantic-web-for-hackers/</guid>
      <description>what&#39;s cool about microformats web?
is it the stickers?the t-shirtsthe community process
urlb.at/2f
personal information disastertravel airlines don&#39;t talk to railroads
 microformats say, what problem does it solve?
 perhaps there is no problem at all
what problem does blogging solve?Twitter for christ&#39;s sake?
no one knows what they do until they are popular
e.g. yahoo pipes is not practical yetit is a user experience nightmareand it doesn&#39;t have a clear defined purpose</description>
    </item>
    
    <item>
      <title>Installing Python Image Library on a Mac</title>
      <link>http://partiallyattended.com/2008/07/14/installing-python-image-library-on-a-mac/</link>
      <pubDate>Mon, 14 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2008/07/14/installing-python-image-library-on-a-mac/</guid>
      <description>I spent about half an hour trying to install the excellent Python ImageLibrary on my mac. It&#39;s one of those things that is more annying than itshould be. You get libjpeg from herehttp://www.ijg.org/files/jpegsrc.v6b.tar.gz follow the instructions here onhow to patch the makefile and how to install libjpeg:http://www.kyngchaos.com/macosx/install/libjpeg (all this after installingthe developer tools on mac), only to fail and then discover that there is aprebuilt binary package here:http://pythonmac.org/packages/py25-fat/index.html which works perfectly.</description>
    </item>
    
    <item>
      <title>and while we are at it here are the references from that article</title>
      <link>http://partiallyattended.com/2008/07/14/and-while-we-are-at-it-here-are-the-references-from-that-article/</link>
      <pubDate>Mon, 14 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2008/07/14/and-while-we-are-at-it-here-are-the-references-from-that-article/</guid>
      <description>References
 - &amp;quot;Python Objects&amp;quot;, Fredrik Lundh, http://www.effbot.org/zone/python-objects.htm - &amp;quot;How to think like a Pythonista&amp;quot;, Mark Hammond, http://python.net/crew/mwh/hacks/objectthink.html - &amp;quot;Python main() functions&amp;quot;, Guido van Rossum, http://www.artima.com/weblogs/viewpost.jsp?thread=4829 - &amp;quot;Python Idioms and Efficiency&amp;quot;, http://jaynes.colorado.edu/PythonIdioms.html - &amp;quot;Python track: python idioms&amp;quot;, http://www.cs.caltech.edu/courses/cs11/material/python/misc/python_idioms.html - &amp;quot;Be Pythonic&amp;quot;, Shalabh Chaturvedi, http://shalabh.infogami.com/Be_Pythonic2 - &amp;quot;Python Is Not Java&amp;quot;, Phillip J. Eby, http://dirtsimple.org/2004/12/python-is-not-java.html - &amp;quot;What is Pythonic?&amp;quot;, Martijn Faassen, http://faassen.n--tree.net/blog/view/weblog/2005/08/06/0 - &amp;quot;Sorting Mini-HOWTO&amp;quot;, Andrew Dalke, http://wiki.python.org/moin/HowTo/Sorting - &amp;quot;Python Idioms&amp;quot;, http://www.</description>
    </item>
    
    <item>
      <title>live blogging from BarCamp Cambridge, Laura James</title>
      <link>http://partiallyattended.com/2008/07/14/live-blogging-from-barcamp-cambridge-laura-james/</link>
      <pubDate>Mon, 14 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2008/07/14/live-blogging-from-barcamp-cambridge-laura-james/</guid>
      <description>Laura JamesAlert Me.Com
might get too corporate.
trying to do the internet of things, internet access to small devicesthey are implimetning today, and will be shipping later this year.comes from R&amp;amp;D, but working in a shipping
they are going to ship a home security system, but they are actuallybuilding a platofrmthat can connect anything that does not require full audio and video
using a mesh network that connect to a hub using a &#39;zigby&#39;output can be things like a lamp that has a color dependant state</description>
    </item>
    
    <item>
      <title>pythonic is a way of thinking</title>
      <link>http://partiallyattended.com/2008/07/14/pythonic-is-a-way-of-thinking/</link>
      <pubDate>Mon, 14 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>http://partiallyattended.com/2008/07/14/pythonic-is-a-way-of-thinking/</guid>
      <description>  Thistutorial delves into pythonic ways of coding. I&#39;m learning from it.
tags: python, hoto, tutorial
 </description>
    </item>
    
  </channel>
</rss>